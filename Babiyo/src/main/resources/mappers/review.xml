<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mealmaker.babiyo.review">

	<sql id="search">
		<choose>
			<when test="searchOption == 'all'">
				WHERE	MEMBER_ID LIKE '%'||#{keyword}||'%'
				OR		PRODUCT_NO LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				WHERE	${searchOption} LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<sql id="sort">
		ORDER BY	${sortOption}
	</sql>
	
	<resultMap type="reviewDto" id="reviewResultMap">
		<id column="NO" property="no"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="CATEGORY_NAME" property="categoryName"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="STAR_RATING" property="starRating"/>
		<result column="CONTENT" property="content"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
	</resultMap>
	
	<select id="reviewQuantity" resultType="java.lang.Integer" parameterType="map">
		SELECT COUNT(PRODUCT_NO)
		FROM REVIEW
		WHERE PRODUCT_NO = #{productNo}
	</select>

	<select id="averageGrade" resultType="java.lang.Integer" parameterType="map">
		SELECT ROUND(AVG(STAR_RATING), 1)
		FROM REVIEW
		WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<select id="reviewDetail" parameterType="reviewDto" resultMap="reviewResultMap">
		SELECT NO, PRODUCT_NO, MEMBER_ID, STAR_RATING, CONTENT, CREATE_DATE, MODIFY_DATE
		FROM REVIEW
		WHERE NO = #{no}
	</select>
	
	<insert id="insertFile" parameterType="map">
		INSERT INTO REVIEW_IMAGE
		(NO, REVIEW_NO, ORIGINAL_NAME, STORED_NAME)
		VALUES
		(#{no}, #{review_no}, #{original_name}, #{stored_name})
	</insert>
	
	<select id="productReviewList" parameterType="map" resultType="map">
	SELECT RNUM, NO, CATEGORY_NAME, PRODUCT_NAME, RATING_AVG, REVIEW_COUNT
	FROM(SELECT ROWNUM RNUM, NO, CATEGORY_NAME, PRODUCT_NAME, RATING_AVG, REVIEW_COUNT
	FROM(SELECT P.NO, PC.NAME CATEGORY_NAME, P.NAME PRODUCT_NAME
	, TRUNC(AVG(STAR_RATING), 1) RATING_AVG, COUNT(*) REVIEW_COUNT
	FROM REVIEW R JOIN PRODUCT P
	ON R.PRODUCT_NO = P.NO
	JOIN PRODUCT_CATEGORY PC
	ON PC.CODE = P.CATEGORY_CODE
	GROUP BY P.NAME, PC.NAME, P.NO
	<if test="sort == ''">ORDER BY RATING_AVG DESC</if>
	<if test="sort != ''">ORDER BY ${sort}</if>)
	<where>
	<if test="searchOption == ''">
	PRODUCT_NAME LIKE '%'||#{search}||'%' OR CATEGORY_NAME LIKE '%'||#{search}||'%'
	</if>
	<if test="searchOption != ''">
	${searchOption} LIKE '%'||#{search}||'%'
	</if>
	</where>)
	WHERE RNUM BETWEEN ${begin} AND ${end}
	</select>

	<!-- 상품이미지 DB -->
	
	<select id="fileSelectList" parameterType="int" resultType="map">
		SELECT NO, ORIGINAL_NAME, STORED_NAME
		FROM REVIEW_IMAGE
		WHERE REVIEW_NO = #{value}
	</select>

	<select id="fileSelectStoredFileName" parameterType="int" resultType="map">
		SELECT NO, STORED_NAME
		FROM REVIEW_IMAGE
		WHERE NO = #{no}
	</select>

	<delete id="fileDelete" parameterType="int">
		DELETE FROM REVIEW_IMAGE
		WHERE NO = #{no}
	</delete>
	
	<!-- 회원 홈에서 리뷰수 조회 -->
	<select id="reviewCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE MEMBER_ID = #{value}
	</select>
		
</mapper>