<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mealmaker.babiyo.product">
	
	<sql id="categoryCode">
		<if test="categoryCode != 0">
			WHERE CATEGORY_CODE = ${categoryCode}
		</if>
	</sql>
	
	<resultMap type="productDto" id="productResultMap">
		<id column="NO" property="no"/>
		<result column="CATEGORY_CODE" property="categoryCode"/>
		<result column="CATEGORY_NAME" property="categoryName"/>
		<result column="NAME" property="name"/>
		<result column="PRICE" property="price"/>
		<result column="STOCK" property="stock"/>
		<result column="CONTENT" property="content"/>
		<result column="REGISTRATION_DATE" property="registrationDate"/>
	</resultMap>
	
	
	<select id="productCategory" resultType="map">
	SELECT CODE, NAME
	FROM PRODUCT_CATEGORY
	</select>
	
	<select id="categoryCount" resultType="int" parameterType="com.mealmaker.babiyo.util.SearchOption">
		SELECT COUNT(*)
		FROM PRODUCT
		<where>
		<if test="search != ''">AND NAME LIKE '%'||#{search}||'%'</if>
		<if test="categoryCode != 0">AND CATEGORY_CODE = ${categoryCode}</if>
		</where>
	</select>
	
	<select id="categoryList" parameterType="map" resultMap="productResultMap">
		SELECT NO, NAME, PRICE
		FROM ( SELECT ROWNUM RNUM, NO, NAME, PRICE
				FROM (SELECT NO, NAME, PRICE
						FROM PRODUCT
						<where>
						<if test="search != ''">AND NAME LIKE '%'||#{search}||'%'</if>
						<if test="categoryCode != 0">AND CATEGORY_CODE = ${categoryCode}</if>
						</where>
						ORDER BY NO DESC)
		)
		WHERE RNUM BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="productCount" resultType="int" parameterType="map">
		SELECT COUNT(*)
		FROM(SELECT P.NAME PRODUCT_NAME, C.NAME CATEGORY_NAME
		FROM PRODUCT P JOIN PRODUCT_CATEGORY C
		ON P.CATEGORY_CODE = C.CODE)
		<where>
		<if test="searchOption == ''">
		PRODUCT_NAME LIKE '%'||#{search}||'%' OR CATEGORY_NAME LIKE '%'||#{search}||'%'
		</if>
		<if test="searchOption != ''">
		${searchOption} LIKE '%'||#{search}||'%'
		</if>
		</where>
	</select>
	
	<select id="productList" parameterType="map" resultMap="productResultMap">
		SELECT NO, CATEGORY_CODE, CATEGORY_NAME, PRODUCT_NAME NAME, PRICE, STOCK
		FROM (SELECT ROWNUM RNUM, NO, CATEGORY_CODE, CATEGORY_NAME
	        		, PRODUCT_NAME, PRICE, STOCK
	        	FROM (SELECT P.NO, P.CATEGORY_CODE, C.NAME CATEGORY_NAME
	        							, P.NAME PRODUCT_NAME, P.PRICE, P.STOCK
					FROM PRODUCT P JOIN PRODUCT_CATEGORY C
					ON P.CATEGORY_CODE = C.CODE
					<choose>
					<when test="sort == ''">ORDER BY STOCK DESC</when>
					<otherwise>ORDER BY ${sort}</otherwise>
					</choose>
					)
		<where>
		<if test="searchOption == ''">
			PRODUCT_NAME LIKE '%'||#{search}||'%' OR CATEGORY_NAME LIKE '%'||#{search}||'%'
		</if>
		<if test="searchOption != ''">
			${searchOption} LIKE '%'||#{search}||'%'
		</if>
		</where>
		)
		WHERE RNUM BETWEEN #{begin} AND #{end}
	</select>
	
	<insert id="productRegistration" parameterType="productDto" 
		useGeneratedKeys="true" keyProperty="no">
		
		<selectKey keyProperty="no" resultType="int" order="AFTER">
			SELECT SEQ_PRODUCT_NO.CURRVAL
			FROM DUAL
		</selectKey>
		
		INSERT INTO PRODUCT
		VALUE(CATEGORY_CODE, NAME, PRICE, STOCK, CONTENT, REGISTRATION_DATE)
		VALUES(#{categoryCode}, #{name}, #{price}, #{stock}, #{content}, SYSDATE)
	</insert>

	<select id="productDetail" parameterType="int" resultMap="productResultMap">
		SELECT P.NO, P.CATEGORY_CODE, C.NAME CATEGORY_NAME, P.NAME, P.PRICE, P.STOCK, P.CONTENT
		FROM PRODUCT P JOIN PRODUCT_CATEGORY C
		ON P.CATEGORY_CODE = C.CODE
		WHERE NO = #{no} 
	</select>
	
	<select id="recommendProductList" parameterType="map" resultMap="productResultMap">
		SELECT NO, NAME, PRICE
		FROM (SELECT NO, NAME, PRICE
			FROM PRODUCT 	
		    WHERE CATEGORY_CODE = (SELECT CODE 
		    						FROM INTEREST 
		    						WHERE MEMBER_ID = #{memberId} 
		    						AND LIST_NO = #{listNo})
		    ORDER BY STOCK DESC)
		WHERE <![CDATA[ ROWNUM <= 2 ]]>
	</select>

	<select id="newProductList" parameterType="productDto" resultMap="productResultMap">
		SELECT NO, NAME, PRICE
		FROM (SELECT NO, NAME, PRICE
					FROM PRODUCT
					ORDER BY NO DESC)
		WHERE <![CDATA[ ROWNUM <= 4 ]]>
	</select>

	<update id="productModification" parameterType="productDto">
		UPDATE PRODUCT
		SET
		NAME = #{name}, 
		CATEGORY_CODE = #{categoryCode},
		PRICE = #{price},
		STOCK = #{stock},
		CONTENT = #{content}
		WHERE NO = #{no}
	</update>	
	
	<delete id="productDelete" parameterType="int">
		DELETE FROM PRODUCT
		WHERE NO = #{value}
	</delete>

	<insert id="insertFile" parameterType="map">
		INSERT INTO PRODUCT_IMAGE
		VALUE(PRODUCT_NO, ORIGINAL_NAME, STORED_NAME)
		VALUES
		(#{parentSeq}, #{original_file_name}, #{stored_file_name})
	</insert>


	<!-- 상품이미지 DB -->
	
	<select id="fileSelectOne" parameterType="int" resultType="map">
		SELECT NO, ORIGINAL_NAME, STORED_NAME, PRODUCT_NO
		FROM PRODUCT_IMAGE
		WHERE PRODUCT_NO = #{value}
	</select>

	<select id="fileSelectStoredFileName" parameterType="int" resultType="map">
		SELECT NO, ORIGINAL_NAME, STORED_NAME, PRODUCT_NO
		FROM PRODUCT_IMAGE
		WHERE NO = #{no}
	</select>

	<delete id="fileDelete" parameterType="int">
		DELETE FROM PRODUCT_IMAGE
		WHERE PRODUCT_NO = #{value}
	</delete>
	
	
	
</mapper>